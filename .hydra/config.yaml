general:
  train_mode: true
  task: instance_segmentation
  seed: null
  checkpoint: /cluster/nvme6/hr/Mask3D/saved/scannet_sam_20240227_041848/last.ckpt
  backbone_checkpoint: null
  freeze_backbone: false
  linear_probing_backbone: false
  train_on_segments: false
  eval_on_segments: false
  filter_out_instances: false
  save_visualizations: false
  visualization_point_size: 20
  decoder_id: -1
  export: false
  use_dbscan: false
  ignore_class_threshold: 100
  project_name: scannet
  workspace: jonasschult
  experiment_name: train_stage2_20240914_154910
  num_targets: 19
  add_instance: true
  dbscan_eps: 0.95
  dbscan_min_points: 1
  export_threshold: 0.0001
  reps_per_epoch: 1
  on_crops: false
  scores_threshold: 0.0
  iou_threshold: 1.0
  area: 5
  eval_inner_core: -1
  topk_per_image: -1
  ignore_mask_idx: []
  max_batch_size: 99999999
  save_dir: saved/${general.experiment_name}
  gpus: 4
data:
  train_mode: train
  validation_mode: validation
  test_mode: validation
  ignore_label: 255
  add_raw_coordinates: true
  add_colors: true
  add_normals: false
  in_channels: 3
  num_labels: 20
  add_instance: ${general.add_instance}
  task: ${general.task}
  pin_memory: false
  num_workers: 2
  batch_size: 2
  test_batch_size: 1
  cache_data: false
  voxel_size: 0.02
  reps_per_epoch: ${general.reps_per_epoch}
  cropping: false
  cropping_args:
    min_points: 30000
    aspect: 0.8
    min_crop: 0.5
    max_crop: 1.0
  crop_min_size: 20000
  crop_length: 6.0
  cropping_v1: true
  remove_small_group: 20
  generate_masks_path: data/processed/scannet_3d_masks
  use_masks_th: 150
  use_masks_score: 0.6
  train_dataloader:
    _target_: torch.utils.data.DataLoader
    shuffle: true
    pin_memory: ${data.pin_memory}
    num_workers: ${data.num_workers}
    batch_size: ${data.batch_size}
  validation_dataloader:
    _target_: torch.utils.data.DataLoader
    shuffle: false
    pin_memory: ${data.pin_memory}
    num_workers: ${data.num_workers}
    batch_size: ${data.test_batch_size}
  test_dataloader:
    _target_: torch.utils.data.DataLoader
    shuffle: false
    pin_memory: ${data.pin_memory}
    num_workers: ${data.num_workers}
    batch_size: ${data.test_batch_size}
  train_dataset:
    _target_: datasets.scannet_stage2.SemanticSegmentationDataset
    dataset_name: scannet
    data_dir: data/processed/scannet200
    image_augmentations_path: conf/augmentation/albumentations_aug.yaml
    volume_augmentations_path: conf/augmentation/volumentations_aug.yaml
    label_db_filepath: data/processed/scannet200/label_database.yaml
    color_mean_std: data/processed/scannet200/color_mean_std.yaml
    data_percent: 1.0
    mode: ${data.train_mode}
    ignore_label: ${data.ignore_label}
    num_labels: ${data.num_labels}
    add_raw_coordinates: ${data.add_raw_coordinates}
    add_colors: ${data.add_colors}
    add_normals: ${data.add_normals}
    add_instance: ${data.add_instance}
    instance_oversampling: 0.0
    place_around_existing: false
    point_per_cut: 0
    max_cut_region: 0
    flip_in_center: false
    noise_rate: 0
    resample_points: 0
    add_unlabeled_pc: false
    cropping: ${data.cropping}
    cropping_args: ${data.cropping_args}
    is_tta: false
    crop_min_size: ${data.crop_min_size}
    crop_length: ${data.crop_length}
    filter_out_classes: []
    label_offset: 0
  validation_dataset:
    _target_: datasets.scannet_stage2.SemanticSegmentationDataset
    dataset_name: scannet
    data_dir: data/processed/scannet200
    image_augmentations_path: null
    volume_augmentations_path: null
    label_db_filepath: data/processed/scannet200/label_database.yaml
    color_mean_std: data/processed/scannet200/color_mean_std.yaml
    data_percent: 1.0
    mode: ${data.validation_mode}
    ignore_label: ${data.ignore_label}
    num_labels: ${data.num_labels}
    add_raw_coordinates: ${data.add_raw_coordinates}
    add_colors: ${data.add_colors}
    add_normals: ${data.add_normals}
    add_instance: ${data.add_instance}
    cropping: false
    is_tta: false
    crop_min_size: ${data.crop_min_size}
    crop_length: ${data.crop_length}
    filter_out_classes: []
    label_offset: 0
  test_dataset:
    _target_: datasets.scannet_stage2.SemanticSegmentationDataset
    dataset_name: scannet
    data_dir: data/processed/scannet200
    image_augmentations_path: null
    volume_augmentations_path: null
    label_db_filepath: data/processed/scannet200/label_database.yaml
    color_mean_std: data/processed/scannet200/color_mean_std.yaml
    data_percent: 1.0
    mode: ${data.test_mode}
    ignore_label: ${data.ignore_label}
    num_labels: ${data.num_labels}
    add_raw_coordinates: ${data.add_raw_coordinates}
    add_colors: ${data.add_colors}
    add_normals: ${data.add_normals}
    add_instance: ${data.add_instance}
    cropping: false
    is_tta: false
    crop_min_size: ${data.crop_min_size}
    crop_length: ${data.crop_length}
    filter_out_classes: []
    label_offset: 0
  train_collation:
    _target_: datasets.utils_stage2.VoxelizeCollate
    ignore_label: ${data.ignore_label}
    voxel_size: ${data.voxel_size}
    mode: ${data.train_mode}
    small_crops: false
    very_small_crops: false
    batch_instance: false
    probing: ${general.linear_probing_backbone}
    task: ${general.task}
    ignore_class_threshold: ${general.ignore_class_threshold}
    filter_out_classes: ${data.train_dataset.filter_out_classes}
    label_offset: ${data.train_dataset.label_offset}
    num_queries: ${model.num_queries}
    generate_masks_path: ${data.generate_masks_path}
    use_masks_th: ${data.use_masks_th}
    use_masks_score: ${data.use_masks_score}
  validation_collation:
    _target_: datasets.utils_stage2.VoxelizeCollate
    ignore_label: ${data.ignore_label}
    voxel_size: ${data.voxel_size}
    mode: ${data.validation_mode}
    batch_instance: false
    probing: ${general.linear_probing_backbone}
    task: ${general.task}
    ignore_class_threshold: ${general.ignore_class_threshold}
    filter_out_classes: ${data.validation_dataset.filter_out_classes}
    label_offset: ${data.validation_dataset.label_offset}
    num_queries: ${model.num_queries}
    generate_masks_path: ${data.generate_masks_path}
    use_masks_th: ${data.use_masks_th}
    use_masks_score: ${data.use_masks_score}
  test_collation:
    _target_: datasets.utils_stage2.VoxelizeCollate
    ignore_label: ${data.ignore_label}
    voxel_size: ${data.voxel_size}
    mode: ${data.test_mode}
    batch_instance: false
    probing: ${general.linear_probing_backbone}
    task: ${general.task}
    ignore_class_threshold: ${general.ignore_class_threshold}
    filter_out_classes: ${data.test_dataset.filter_out_classes}
    label_offset: ${data.test_dataset.label_offset}
    num_queries: ${model.num_queries}
    generate_masks_path: ${data.generate_masks_path}
    use_masks_th: ${data.use_masks_th}
    use_masks_score: ${data.use_masks_score}
logging:
- _target_: pytorch_lightning.loggers.CSVLogger
  save_dir: ${general.save_dir}
  name: ${general.experiment_name}
model:
  _target_: models.Mask3D
  hidden_dim: 128
  dim_feedforward: 1024
  num_queries: 150
  num_heads: 8
  num_decoders: 3
  dropout: 0.0
  pre_norm: false
  use_level_embed: false
  normalize_pos_enc: true
  positional_encoding_type: fourier
  gauss_scale: 1.0
  hlevels:
  - 0
  - 1
  - 2
  - 3
  non_parametric_queries: true
  random_query_both: false
  random_normal: false
  random_queries: false
  use_np_features: false
  sample_sizes:
  - 200
  - 800
  - 3200
  - 12800
  - 51200
  max_sample_size: false
  shared_decoder: true
  num_classes: 2
  train_on_segments: ${general.train_on_segments}
  scatter_type: mean
  voxel_size: ${data.voxel_size}
  config:
    backbone:
      _target_: models.Res16UNet34C
      config:
        dialations:
        - 1
        - 1
        - 1
        - 1
        conv1_kernel_size: 5
        bn_momentum: 0.02
      in_channels: ${data.in_channels}
      out_channels: ${data.num_labels}
      out_fpn: true
metrics:
  _target_: models.metrics.ConfusionMatrix
  num_classes: ${data.num_labels}
  ignore_label: ${data.ignore_label}
optimizer:
  _target_: torch.optim.AdamW
  lr: 0.0002
scheduler:
  scheduler:
    _target_: torch.optim.lr_scheduler.OneCycleLR
    max_lr: ${optimizer.lr}
    epochs: ${trainer.max_epochs}
    steps_per_epoch: -1
  pytorch_lightning_params:
    interval: step
trainer:
  deterministic: false
  max_epochs: 50
  min_epochs: 1
  resume_from_checkpoint: null
  check_val_every_n_epoch: 5
  num_sanity_val_steps: 2
  log_every_n_steps: 5
callbacks:
- _target_: pytorch_lightning.callbacks.ModelCheckpoint
  monitor: val_mean_box_ap_50
  save_last: true
  save_top_k: 1
  mode: max
  dirpath: ${general.save_dir}
  filename: '{epoch}-{val_mean_box_ap_50:.3f}'
  every_n_epochs: 1
- _target_: pytorch_lightning.callbacks.LearningRateMonitor
  logging_interval: step
matcher:
  _target_: models.matcher.HungarianMatcher
  cost_class: 0.0
  cost_mask: 5.0
  cost_dice: 2.0
  num_points: -1
loss:
  _target_: models.criterion.SetCriterion
  num_classes: 2
  eos_coef: 0.1
  losses:
  - labels
  - masks
  num_points: ${matcher.num_points}
  oversample_ratio: 3.0
  importance_sample_ratio: 0.75
  class_weights: -1
